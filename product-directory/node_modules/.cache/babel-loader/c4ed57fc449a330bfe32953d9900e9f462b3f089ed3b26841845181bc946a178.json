{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  items: [],\n  status: 'idle',\n  error: null,\n  selectedCategory: 'All'\n};\nconst api = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts' // Здесь нужно будет настроить свой API\n});\n\n// Создаем асинхронные действия для работы с API\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const response = await api.get('/products');\n  return response.data;\n});\n\n// Add product\nexport const addProduct = createAsyncThunk('products/addProduct', async newProduct => {\n  const response = await api.post('/products', newProduct);\n  return response.data;\n});\n\n// Delete product\nexport const deleteProduct = createAsyncThunk('products/deleteProduct', async id => {\n  await api.delete(`/products/${id}`);\n  return id;\n});\n\n// Slice\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setCategory: (state, action) => {\n      state.selectedCategory = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message || 'Failed to fetch products';\n    }).addCase(addProduct.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(deleteProduct.fulfilled, (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload);\n    });\n  }\n});\nexport const {\n  setCategory\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","error","selectedCategory","api","create","baseURL","fetchProducts","response","get","data","addProduct","newProduct","post","deleteProduct","id","delete","productSlice","name","reducers","setCategory","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","push","filter","item","actions","reducer"],"sources":["C:/Users/Vania/Desktop/Шаг/React/hw13/product-directory/src/features/productSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  category: string;\r\n  price: number;\r\n  description: string;\r\n}\r\n\r\ninterface ProductState {\r\n  items: Product[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null;\r\n  selectedCategory: string;\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  items: [],\r\n  status: 'idle',\r\n  error: null,\r\n  selectedCategory: 'All',\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com/posts', // Здесь нужно будет настроить свой API\r\n});\r\n\r\n// Создаем асинхронные действия для работы с API\r\nexport const fetchProducts = createAsyncThunk<Product[]>('products/fetchProducts', async () => {\r\n  const response = await api.get('/products');\r\n  return response.data;\r\n});\r\n\r\n// Add product\r\nexport const addProduct = createAsyncThunk<Product, Omit<Product, 'id'>>(\r\n  'products/addProduct',\r\n  async (newProduct) => {\r\n    const response = await api.post('/products', newProduct);\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Delete product\r\nexport const deleteProduct = createAsyncThunk<number, number>('products/deleteProduct', async (id) => {\r\n  await api.delete(`/products/${id}`);\r\n  return id;\r\n});\r\n\r\n// Slice\r\nconst productSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {\r\n    setCategory: (state, action: PayloadAction<string>) => {\r\n      state.selectedCategory = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message || 'Failed to fetch products';\r\n      })\r\n      .addCase(addProduct.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(deleteProduct.fulfilled, (state, action) => {\r\n        state.items = state.items.filter((item) => item.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setCategory } = productSlice.actions;\r\nexport default productSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAiBzB,MAAMC,YAA0B,GAAG;EACjCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,IAAI;EACXC,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAE,4CAA4C,CAAE;AACzD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAGV,gBAAgB,CAAY,wBAAwB,EAAE,YAAY;EAC7F,MAAMW,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAGd,gBAAgB,CACxC,qBAAqB,EACrB,MAAOe,UAAU,IAAK;EACpB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACS,IAAI,CAAC,WAAW,EAAED,UAAU,CAAC;EACxD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAGjB,gBAAgB,CAAiB,wBAAwB,EAAE,MAAOkB,EAAE,IAAK;EACpG,MAAMX,GAAG,CAACY,MAAM,CAAC,aAAaD,EAAE,EAAE,CAAC;EACnC,OAAOA,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,MAAME,YAAY,GAAGrB,WAAW,CAAC;EAC/BsB,IAAI,EAAE,UAAU;EAChBnB,YAAY;EACZoB,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACrDD,KAAK,CAAClB,gBAAgB,GAAGmB,MAAM,CAACC,OAAO;IACzC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,aAAa,CAACoB,OAAO,EAAGN,KAAK,IAAK;MACzCA,KAAK,CAACpB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDyB,OAAO,CAACnB,aAAa,CAACqB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACpB,MAAM,GAAG,WAAW;MAC1BoB,KAAK,CAACrB,KAAK,GAAGsB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDG,OAAO,CAACnB,aAAa,CAACsB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACpB,MAAM,GAAG,QAAQ;MACvBoB,KAAK,CAACnB,KAAK,GAAGoB,MAAM,CAACpB,KAAK,CAAC4B,OAAO,IAAI,0BAA0B;IAClE,CAAC,CAAC,CACDJ,OAAO,CAACf,UAAU,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACrB,KAAK,CAAC+B,IAAI,CAACT,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CACDG,OAAO,CAACZ,aAAa,CAACc,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACrB,KAAK,GAAGqB,KAAK,CAACrB,KAAK,CAACgC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKO,MAAM,CAACC,OAAO,CAAC;IACxE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAY,CAAC,GAAGH,YAAY,CAACiB,OAAO;AACnD,eAAejB,YAAY,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}